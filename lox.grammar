program         → declaration* EOF ;

declaration     → varDecl
                | statement ;

statement       → exprStmt
                | printStmt
                | block ;

varDecl         → "var" IDENTIFIER ( "=" expression )? ";" ;

block           → "{" declaration* "}" ;
exprStmt        → expression ";" ;
printStmt       → "print" expression ";" ;

expression      → assignment ;
assignment      → IDENTIFIER "=" assignment
                | equality ;
                
equality        → comparison ( ( "!=" | "==" ) comparison )* ;
comparison      → addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition        → multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication  → unary ( ( "/" | "*" ) unary )* ;

unary           → ( "!" | "-" ) unary
                | primary ;

primary         → "true" | "false" | "nil"
                | NUMBER | STRING
                | "(" expression ")"
                | IDENTIFIER ;