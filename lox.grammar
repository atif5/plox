program     	→ declaration* EOF ;

declaration 	→ varDecl
            	| statement ;

statement   	→ exprStmt
            	| printStmt ;

exprStmt  		→ expression ";" ;
printStmt 		→ "print" expression ";" ;

varDecl 		→ "var" IDENTIFIER ( "=" expression )? ";" ;

expression 		→ assignment ;
assignment 		→ IDENTIFIER "=" assignment
           		| equality ;
           		
equality		→ comparison ( ( "!=" | "==" ) comparison )* ;
comparison		→ addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition		→ multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication	→ unary ( ( "/" | "*" ) unary )* ;

unary          	→ ( "!" | "-" ) unary
               	| primary ;

primary 		→ "true" | "false" | "nil"
        		| NUMBER | STRING
        		| "(" expression ")"
        		| IDENTIFIER ;